/* 1.0.0 */
/*****************************************************************************************************************************************************************\
* Module Name       : Find 10,001 Prime
* Description       : Euler Project 7 Source Code
* Original Author   : Jake Nabozny
* Date Created      : 10/17/2012
\*****************************************************************************************************************************************************************/


/*******************************************************************************\
* Include Files
\*******************************************************************************/
#include "findprime_private.h"


/*******************************************************************************\
* Macro Definitions
\*******************************************************************************/
#define FINDPRIME_LIMIT    (10001)
// Answer: 104743


/*******************************************************************************\
* Static Variables
\*******************************************************************************/


/*******************************************************************************\
* Static Functions
\*******************************************************************************/
static U4 u4_s_FindPrime_GetPrime(void);


/*******************************************************************************\
* Function Definitions
\*******************************************************************************/


/*****************************************************************************************************************************************************************\
* Function name     : vd_g_FindPrime_Main
* Called by         : main
* Argument(s)       : void
* Return            : void
* Description       : Entry Point for Euler Project 7 FindPrime
\*****************************************************************************************************************************************************************/
void vd_g_FindPrime_Main(void)
{
    U4 u4_t_ans;

    cout << "Find the 10,001st prime number..\n\n";

    u4_t_ans = u4_s_FindPrime_GetPrime();

    cout << "Answer:\t" << u4_t_ans << "\n\n";
}


/*****************************************************************************************************************************************************************\
* Function name     : u4_s_FindPrime_GetPrime
* Called by         : vd_g_FindPrime_Main
* Argument(s)       : void
* Return            : U4
* Description       : Get 10,001st Prime
\*****************************************************************************************************************************************************************/
static U4 u4_s_FindPrime_GetPrime(void)
{
    U4 u4_t_primelist[FINDPRIME_LIMIT];
    U2 u2_t_cntr;
    U4 u4_t_num;
    U2 u2_t_idx;

    u4_t_primelist[0] = (U4)2;
    u2_t_cntr         = (U2)1;
    u4_t_num          = (U4)3;

    while(u2_t_cntr < (U2)FINDPRIME_LIMIT)
    {

        for(u2_t_idx = (U2)0; u2_t_idx < u2_t_cntr; u2_t_idx++)
        {
            if((u4_t_num % u4_t_primelist[u2_t_idx]) == (U4)0)      /* Divisible by prime number ? */
            {
                u4_t_num += (U4)2;      /* Increment number */
                u2_t_idx  = (U2)0;      /* Reset index */
            }
        }

        u4_t_primelist[u2_t_cntr]  = u4_t_num;
        u4_t_num                  += (U4)2;
        u2_t_cntr++;
    }

    u4_t_num -= (U4)2;

    return(u4_t_num);
}
