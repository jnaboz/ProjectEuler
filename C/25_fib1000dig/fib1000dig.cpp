/* 1.0.0 */
/*****************************************************************************************************************************************************************\
* Module Name       : Fib1000Dig
* Description       : Euler Project 25 Source Code
* Original Author   : Jake Nabozny
* Date Created      : 11/01/2012
\*****************************************************************************************************************************************************************/


/*******************************************************************************\
* Include Files
\*******************************************************************************/
#include "fib1000dig_private.h"
#include "cmn_func_public.h"


/*******************************************************************************\
* Macro Definitions
\*******************************************************************************/
#define FIB1000DIG_LIMIT    (1000)
// Answer: 


/*******************************************************************************\
* Static Variables
\*******************************************************************************/


/*******************************************************************************\
* Static Functions
\*******************************************************************************/
static void vd_s_Fib1000Dig_GetFibNum(void);


/*******************************************************************************\
* Function Definitions
\*******************************************************************************/


/*****************************************************************************************************************************************************************\
* Function name     : vd_g_Fib1000Dig_Main
* Called by         : main
* Argument(s)       : void
* Return            : void
* Description       : Entry Point for Euler Project 25 Fib1000Dig
\*****************************************************************************************************************************************************************/
void vd_g_Fib1000Dig_Main(void)
{
    cout << "Find the first number in a fibonacci sequence with " << FIB1000DIG_LIMIT << " digits..\n\n";

    vd_s_Fib1000Dig_GetFibNum();
}


/*****************************************************************************************************************************************************************\
* Function name     : u4_s_Fib1000Dig_GetFibNum
* Called by         : vd_g_Fib1000Dig_Main
* Argument(s)       : void
* Return            : U4
* Description       : GetFibNum
\*****************************************************************************************************************************************************************/
static void vd_s_Fib1000Dig_GetFibNum(void)
{
    U4 u4_t_idx;
    U4 u4_t_term;

    U1 u1_t_curr[FIB1000DIG_LIMIT];
    ST_CMNFUNC_1D_ARRAY st_t_curr = 
    {
        &u1_t_curr[0],
        (U4)FIB1000DIG_LIMIT
    };

    U1 u1_t_prev[FIB1000DIG_LIMIT];
    ST_CMNFUNC_1D_ARRAY st_t_prev = 
    {
        &u1_t_prev[0],
        (U4)FIB1000DIG_LIMIT
    };

    U1 u1_t_temp[FIB1000DIG_LIMIT];
    ST_CMNFUNC_1D_ARRAY st_t_temp =
    {
        &u1_t_temp[0],
        (U4)FIB1000DIG_LIMIT
    };

    for(u4_t_idx = (U4)0; u4_t_idx < (U4)FIB1000DIG_LIMIT; u4_t_idx++)
    {
        u1_t_curr[u4_t_idx] = (U4)0;
        u1_t_prev[u4_t_idx] = (U4)0;
        u1_t_temp[u4_t_idx] = (U4)0;
    }

    u1_t_curr[0] = (U1)1;
    u1_t_prev[0] = (U1)1;
    u4_t_term    = (U4)2;

    while(u1_t_curr[FIB1000DIG_LIMIT-1] == (U1)0)
    {
        vd_g_CmnFunc_GetNextFibNum(&st_t_curr, &st_t_prev, &st_t_temp);
        u4_t_term++;
    }

    cout << "Answer:\t" << u4_t_term << "\n\n";
}
